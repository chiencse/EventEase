name: 🚀 Deploy + Release NestJS App

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/sample_app
  NODE_VERSION: 20

permissions:
  contents: write # For pushing commits and creating releases
  packages: write # For pushing to GHCR

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1 # Shallow clone for tests

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci # Faster than npm install

      - name: Run tests
        run: npm run test

      - name: Upload test coverage
        if: failure() # Upload on failure for debugging
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage
          path: coverage/

  build:
    name: 🛠️ Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth:  कप

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: 🚀 Deploy to EC2
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Copy files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: 'docker-compose-staging.yml'
          target: /home/${{ secrets.EC2_USER }}/nestjs-deploy
          strip_components: 1 # Avoid nesting in subfolder

      - name: SSH and Deploy
        uses: appleboy/ssh-action@v1.0.3
        env:
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          ENV_FILE: ${{ secrets.ENV_FILE }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: GHCR_TOKEN,GHCR_USERNAME,IMAGE_NAME,ENV_FILE
          script: |
            cd /home/${{ secrets.EC2_USER }}/nestjs-deploy
            echo "$ENV_FILE" > .env
            echo "$GHCR_TOKEN" | docker login ghcr.io -u "$GHCR_USERNAME" --password-stdin
            docker compose -f docker-compose-staging.yml down
            docker compose -f docker-compose-staging.yml pull
            docker compose -f docker-compose-staging.yml up -d
            # Verify deployment
            sleep 5
            if ! curl -s -f http://localhost:${{ secrets.APP_PORT:-3000 }}/health; then
              echo "Deployment failed: Health check endpoint not responding"
              exit 1
            fi

  release:
    name: 📦 Bump Version and Create Release
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for changelog
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Set up Git user
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Bump version using standard-version
        run: npx standard-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version
        id: extract_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Update README badge
        run: |
          sed -i "s|https://img.shields.io/badge/version-.*-blue|https://img.shields.io/badge/version-${{ steps.extract_version.outputs.version }}-blue|" README.md
          git add README.md
          git commit -m "docs: update version badge to v${{ steps.extract_version.outputs.version }}" || echo "No changes to commit"

      - name: Push changes and tags
        run: |
          git push origin HEAD:main
          git push --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.extract_version.outputs.version }}
          name: Release v${{ steps.extract_version.outputs.version }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

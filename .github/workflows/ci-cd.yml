name: 🚀 Deploy + Release NestJS App

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/sample_app

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 👈 rất quan trọng để lấy đủ lịch sử tags
      
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      
      - run: npm install
      - run: npm run test

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 20
      
      - name: Login to GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin
      
      - run: docker build -t $IMAGE_NAME:latest .
      - run: docker push $IMAGE_NAME:latest

  release:
    name: Bump Version & Create Git Tag
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 20
      
      - run: npm install

      - name: Set up Git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Bump version using standard-version
        run: npm run release

      - name: Push bump commit + tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin HEAD:main
          git push origin --tags

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: release

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.extract_version.outputs.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract Version
        id: extract_version
        run: echo "VERSION=$(node -p -e "require('./package.json').version")" >> $GITHUB_ENV

  update-readme-badge:
    name: Update Version Badge
    runs-on: ubuntu-latest
    needs: create-release

    steps:
      - uses: actions/checkout@v3

      - name: Update README badge
        run: |
          VERSION=$(node -p -e "require('./package.json').version")
          sed -i 's|\(https://img.shields.io/badge/version-\).*\(-blue\)|\1'"$VERSION"'\2|' README.md
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git commit -am "docs: update version badge to $VERSION"
          git push
